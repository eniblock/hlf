apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "hlf-ord.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "hlf-ord.labels" . | nindent 4 }}
    app.kubernetes.io/component: orderer
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  serviceName: {{ include "hlf-ord.fullname" . }}
  selector:
    matchLabels:
      {{- include "hlf-ord.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: orderer
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "hlf-ord.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        app.kubernetes.io/component: orderer
    spec:
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "hlf-ord.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        {{- if .Values.secrets.ord.cert }}
        - name: id-cert
          secret:
            secretName: {{ .Values.secrets.ord.cert }}
        {{- end }}
        {{- if .Values.secrets.ord.key }}
        - name: id-key
          secret:
            secretName: {{ .Values.secrets.ord.key }}
        {{- end }}
        {{- if .Values.secrets.ord.caCert }}
        - name: cacert
          secret:
            secretName: {{ .Values.secrets.ord.caCert }}
        {{- end }}
        {{- if .Values.secrets.ord.intCaCert }}
        - name: intcacert
          secret:
            secretName: {{ .Values.secrets.ord.intCaCert }}
        {{- end }}
        {{- if .Values.secrets.ord.tls }}
        - name: tls
          secret:
            secretName: {{ .Values.secrets.ord.tls }}
        {{- end }}
        {{- if .Values.secrets.ord.tlsRootCert }}
        - name: tls-rootcert
          secret:
            secretName: {{ .Values.secrets.ord.tlsRootCert }}
        {{- end }}
        {{- if .Values.secrets.ord.tlsClient }}
        - name: tls-client
          secret:
            secretName: {{ .Values.secrets.ord.tlsClient }}
        {{- end }}
        {{- if .Values.secrets.ord.tlsClientRootCert }}
        - name: tls-clientrootcert
          secret:
            secretName: {{ .Values.secrets.ord.tlsClientRootCert }}
        {{- end }}
        {{- if .Values.secrets.genesis }}
        - name: genesis
          secret:
            secretName: {{ .Values.secrets.genesis }}
        {{- end }}
        {{- if .Values.secrets.adminCert }}
        - name: admin-cert
          secret:
            secretName: {{ .Values.secrets.adminCert }}
        {{- end }}
        {{- if .Values.secrets.caServerTls }}
        - name: ca-server-tls
          secret:
            secretName: {{ .Values.secrets.caServerTls }}
        {{- end }}
      containers:
        - name: orderer
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: ord-port
              containerPort: 7050
              protocol: TCP
            {{- if eq .Values.ord.metrics.provider "prometheus" }}
            - name: metrics
              containerPort: 9443
              protocol: TCP
            {{- end }}
          livenessProbe:
            exec:
              command:
                - ls
                - /var/hyperledger
            initialDelaySeconds: 5
            periodSeconds: 5
          # TODO: Improve readiness probe (ideally `ps aux | awk '$11=="orderer"'`)
          readinessProbe:
            exec:
              command:
                - ls
                - /var/hyperledger
            initialDelaySeconds: 15
          command:
            - sh
            - -c
            - |

              while [ ! -d /var/hyperledger/admin_msp/admincerts ] || [ -z "$(ls -A /var/hyperledger/admin_msp/admincerts)" ];
              do
                echo -e "\033[0;31m /var/hyperledger/admin_msp/admincerts must contain Ord admin certificates files \033[0m"
                sleep 60
              done

              while [ ! -d /hl_config/genesis ] || [ -z "$(ls -A /hl_config/genesis)" ];
              do
                echo -e "\033[0;31m /hl_config/genesis must contain Genesis transaction \033[0m"
                sleep 60
              done

              while [ ! -d ${ORDERER_GENERAL_LOCALMSPDIR}/signcerts ];
              do
                echo -e "\033[0;31m ${ORDERER_GENERAL_LOCALMSPDIR}/signcerts directory must exist \033[0m"
                sleep 60
              done

              echo -e "\033[0;32m Create ${ORDERER_FILELEDGER_LOCATION} directory to avoid restarts \033[0m"
              mkdir -p ${ORDERER_FILELEDGER_LOCATION}
              mkdir -p ${ORDERER_FILELEDGER_LOCATION}/index

              if [ $ORDERER_GENERAL_TLS_CLIENTAUTHREQUIRED ]
              then
                export ORDERER_GENERAL_TLS_CLIENTROOTCAS=$(echo $(ls $ORDERER_GENERAL_TLS_CLIENTROOTCAS) | echo -e "[$(sed 's/ /,/g')]")
              fi

              echo -e ">\033[0;35m orderer \033[0m"
              exec orderer
          envFrom:
            {{- if .Values.secrets.ord.cred }}
            - secretRef:
                # Environmental variables CA_USERNAME and CA_PASSWORD
                name: {{ .Values.secrets.ord.cred }}
            {{- end }}
            - configMapRef:
                name: {{ include "hlf-ord.fullname" . }}
          volumeMounts:
            - mountPath: /var/hyperledger
              name: data
            {{- if .Values.secrets.ord.cert }}
            - mountPath: /var/hyperledger/msp/signcerts
              name: id-cert
            {{- end }}
            {{- if .Values.secrets.ord.key }}
            - mountPath: /var/hyperledger/msp/keystore
              name: id-key
            {{- end }}
            {{- if .Values.secrets.ord.caCert }}
            - mountPath: /var/hyperledger/msp/cacerts
              name: cacert
            - mountPath: /var/hyperledger/admin_msp/cacerts
              name: cacert
            {{- end }}
            {{- if .Values.secrets.ord.intCaCert }}
            - mountPath: /var/hyperledger/msp/intermediatecerts
              name: intcacert
            - mountPath: /var/hyperledger/admin_msp/intermediatecerts
              name: intcacert
            {{- end }}
            {{- if .Values.secrets.ord.tls }}
            - mountPath: /var/hyperledger/tls/server/pair
              name: tls
            {{- end }}
            {{- if .Values.secrets.ord.tlsClient }}
            - mountPath: /var/hyperledger/tls/client/pair
              name: tls-client
            {{- end }}
            {{- if .Values.secrets.ord.tlsRootCert }}
            - mountPath: /var/hyperledger/tls/server/cert
              name: tls-rootcert
            {{- end }}
            {{- if .Values.secrets.ord.tlsClientRootCert }}
            - mountPath: /var/hyperledger/tls/client/cert
              name: tls-clientrootcert
            {{- end }}
            {{- if .Values.secrets.genesis }}
            - mountPath: /hl_config/genesis
              name: genesis
            {{- end }}
            {{- if .Values.secrets.adminCert }}
            - mountPath: /var/hyperledger/admin_msp/admincerts
              name: admin-cert
            - mountPath: /var/hyperledger/admin_msp/signcerts
              name: admin-cert
            - mountPath: /var/hyperledger/msp/admincerts
              name: admin-cert
            {{- end }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - {{ .Values.persistence.accessMode | quote }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
        {{- if .Values.persistence.storageClass }}
        storageClassName: {{ .Values.persistence.storageClass }}
        {{- end }}
