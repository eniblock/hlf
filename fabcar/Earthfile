VERSION 0.6

baze:
    FROM alpine:3.13

    # Add CA certificates and timezone data files
    RUN apk add -U --no-cache ca-certificates tzdata

    # Add unprivileged user
    RUN adduser -s /bin/true -u 1000 -D -h /app app \
        && sed -i -r "/^(app|root)/!d" /etc/group /etc/passwd \
        && sed -i -r 's#^(.*):[^:]*$#\1:/sbin/nologin#' /etc/passwd
    SAVE ARTIFACT /usr/share/zoneinfo
    SAVE ARTIFACT /etc/ssl/certs/ca-certificates.crt
    SAVE ARTIFACT /etc/passwd
    SAVE ARTIFACT /etc/group
    SAVE ARTIFACT /etc/shadow

build:
    # This image is a microservice in golang for the marbles chaincode
    FROM golang:1.15.8-alpine
    RUN mkdir -p /META-INF/foo/bar

    COPY . /go/src/github.com/fabcar
    WORKDIR /go/src/github.com/fabcar

    # Build application
    RUN CGO_ENABLED=0 GOARCH=amd64 GOOS=linux go build -trimpath -ldflags '-extldflags "-static" -w -s' -o chaincode -v .
    SAVE ARTIFACT /go/src/github.com/fabcar/chaincode
    SAVE ARTIFACT /META-INF

docker:
    # Production ready image
    # Pass the binary to the prod image
    FROM busybox
    # Add the timezone data files
    COPY +baze/zoneinfo /usr/share/zoneinfo
    # Add the CA certificates
    COPY +baze/ca-certificates.crt /etc/ssl/certs/
    # Add-in our unprivileged user
    COPY +baze/passwd /etc/
    COPY +baze/group /etc/
    COPY +baze/shadow /etc/
    COPY +build/chaincode /chaincode
    COPY +build/META-INF /META-INF
    USER app
    ENTRYPOINT ["/chaincode"]
    ARG tag=latest
    ARG ref=eniblock/hlf-fabcar:${tag}
    SAVE IMAGE --push ${ref}
